// Generated by view binder compiler. Do not edit!
package com.devmasterteam.tasks.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.devmasterteam.tasks.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowTaskListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imageTask;

  @NonNull
  public final TextView textDescription;

  @NonNull
  public final TextView textDueDate;

  @NonNull
  public final TextView textPriority;

  @NonNull
  public final View view;

  private RowTaskListBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView imageTask,
      @NonNull TextView textDescription, @NonNull TextView textDueDate,
      @NonNull TextView textPriority, @NonNull View view) {
    this.rootView = rootView;
    this.imageTask = imageTask;
    this.textDescription = textDescription;
    this.textDueDate = textDueDate;
    this.textPriority = textPriority;
    this.view = view;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowTaskListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowTaskListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_task_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowTaskListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.image_task;
      ImageView imageTask = ViewBindings.findChildViewById(rootView, id);
      if (imageTask == null) {
        break missingId;
      }

      id = R.id.text_description;
      TextView textDescription = ViewBindings.findChildViewById(rootView, id);
      if (textDescription == null) {
        break missingId;
      }

      id = R.id.text_due_date;
      TextView textDueDate = ViewBindings.findChildViewById(rootView, id);
      if (textDueDate == null) {
        break missingId;
      }

      id = R.id.text_priority;
      TextView textPriority = ViewBindings.findChildViewById(rootView, id);
      if (textPriority == null) {
        break missingId;
      }

      id = R.id.view;
      View view = ViewBindings.findChildViewById(rootView, id);
      if (view == null) {
        break missingId;
      }

      return new RowTaskListBinding((ConstraintLayout) rootView, imageTask, textDescription,
          textDueDate, textPriority, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
